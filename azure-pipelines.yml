trigger:
- master
name: $(Year:yy)$(DayOfYear)$(Rev:r)

stages:
  - stage: Unit_Test
    jobs:

    - job: 'Test_Linux'
      pool:
        vmImage: 'Ubuntu-16.04'
      strategy:
        matrix:
          Python36:
            python.version: '3.6'
          Python37:
            python.version: '3.7'
          Python38:
            python.version: '3.8'

      variables:
        PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip

      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: 'x64'

      - task: Cache@2
        inputs:
          key: 'python | "$(Agent.OS)" | requirements-dev.txt'
          restoreKeys: |
            python | "$(Agent.OS)"
            python
          path: $(PIP_CACHE_DIR)
        displayName: Cache pip packages

      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
        displayName: 'Install dependencies'

      - script: |
          black . --check
          isort . --check-only
          flake8
          mypy .
          interrogate nbqa tests -v -c pyproject.toml
          pydocstyle nbqa tests
          pylint nbqa tests
        displayName: 'static analysis'

      - script: |
          pytest --junitxml=junit/test-results.xml --cov-report=xml --cov-report=html -vv --doctest-modules -W error --cov=nbqa --cov-report=term-missing --ignore=docs
        displayName: 'pytest'

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

    - job: 'Test_Windows'
      pool:
        vmImage: 'vs2017-win2016'
      strategy:
        matrix:
          Python36:
            python.version: '3.6'
          Python37:
            python.version: '3.7'
          Python38:
            python.version: '3.8'

      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: 'x64'

      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
        displayName: 'Install dependencies'

      - script: |
          black . --check
          isort . --check-only
          flake8
          mypy .
          interrogate nbqa tests -v -c pyproject.toml
          pydocstyle nbqa tests
          pylint nbqa tests
        displayName: 'static analysis'

      - script: |
          pytest -vv --doctest-modules -W error --cov=nbqa --cov-report=term-missing --ignore=docs
        displayName: 'pytest'
